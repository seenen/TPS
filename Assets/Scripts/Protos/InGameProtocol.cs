// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: InGameProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Net.ProtolJava {

  /// <summary>Holder for reflection information generated from InGameProtocol.proto</summary>
  public static partial class InGameProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for InGameProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InGameProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRJbkdhbWVQcm90b2NvbC5wcm90bxIPbmV0LnByb3RvbF9qYXZhIncKDUFj",
            "dGlvblJlcXVlc3QSMQoLbW92ZVJlcXVlc3QYASABKAsyHC5uZXQucHJvdG9s",
            "X2phdmEuTW92ZVJlcXVlc3QSMwoMc2hvb3RSZXF1ZXN0GAIgASgLMh0ubmV0",
            "LnByb3RvbF9qYXZhLlNob290UmVxdWVzdCLCAgoLTW92ZVJlcXVlc3QSKwoI",
            "cG9zaXRpb24YASABKAsyGS5uZXQucHJvdG9sX2phdmEuUFZlY3RvcjMSKwoI",
            "dmVsb2NpdHkYAiABKAsyGS5uZXQucHJvdG9sX2phdmEuUFZlY3RvcjMSEQoJ",
            "aFJvdGF0aW9uGAMgASgCEhEKCXZSb3RhdGlvbhgEIAEoAhINCgVoTW92ZRgF",
            "IAEoAhINCgV2TW92ZRgGIAEoAhIRCgloTG9va01vdmUYByABKAISEQoJdkxv",
            "b2tNb3ZlGAggASgCEgwKBGp1bXAYCSABKAgSDgoGaGFzSGl0GAogASgIEikK",
            "BmFpbURpchgLIAEoCzIZLm5ldC5wcm90b2xfamF2YS5QVmVjdG9yMxImCgNo",
            "aXQYDCABKAsyGS5uZXQucHJvdG9sX2phdmEuUFZlY3RvcjMidQoMU2hvb3RS",
            "ZXF1ZXN0EhIKCnNob290U3RhcnQYASABKAgSEAoIc2hvb3RpbmcYAiABKAgS",
            "EAoIc2hvb3RFbmQYAyABKAgSLQoHYnVsbGV0cxgEIAMoCzIcLm5ldC5wcm90",
            "b2xfamF2YS5CdWxsZXRTdGF0ZSKbAQoLQnVsbGV0U3RhdGUSEQoJYnVsbGV0",
            "VWlkGAEgASgFEiYKA3BvcxgCIAEoCzIZLm5ldC5wcm90b2xfamF2YS5QVmVj",
            "dG9yMxImCgNkaXIYAyABKAsyGS5uZXQucHJvdG9sX2phdmEuUFZlY3RvcjMS",
            "FQoNaGl0ZWRQbGF5ZXJJZBgEIAEoCRISCgppc0hlYWRTaG90GAUgASgIIj0K",
            "ClJlc3VsdFB1c2gSLwoKcGxheWVyUHVzaBgBIAEoCzIbLm5ldC5wcm90b2xf",
            "amF2YS5QbGF5ZXJQdXNoIm8KBlBsYXllchILCgNwaWQYASABKAkSKgoEbW92",
            "ZRgCIAEoCzIcLm5ldC5wcm90b2xfamF2YS5Nb3ZlUmVxdWVzdBIsCgVzaG9v",
            "dBgDIAEoCzIdLm5ldC5wcm90b2xfamF2YS5TaG9vdFJlcXVlc3QiKwoIUFZl",
            "Y3RvcjMSCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAIiNQoKUGxh",
            "eWVyUHVzaBInCgZwbGF5ZXIYASADKAsyFy5uZXQucHJvdG9sX2phdmEuUGxh",
            "eWVyIjQKEEdhbWVSZWFkeVJlcXVlc3QSDgoGcm9vbUlkGAEgASgJEhAKCHBs",
            "YXllcklkGAIgASgJIhMKEUdhbWVSZWFkeVJlc3BvbnNlIg8KDUdhbWVSZWFk",
            "eVB1c2hiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.ActionRequest), global::Net.ProtolJava.ActionRequest.Parser, new[]{ "MoveRequest", "ShootRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.MoveRequest), global::Net.ProtolJava.MoveRequest.Parser, new[]{ "Position", "Velocity", "HRotation", "VRotation", "HMove", "VMove", "HLookMove", "VLookMove", "Jump", "HasHit", "AimDir", "Hit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.ShootRequest), global::Net.ProtolJava.ShootRequest.Parser, new[]{ "ShootStart", "Shooting", "ShootEnd", "Bullets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.BulletState), global::Net.ProtolJava.BulletState.Parser, new[]{ "BulletUid", "Pos", "Dir", "HitedPlayerId", "IsHeadShot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.ResultPush), global::Net.ProtolJava.ResultPush.Parser, new[]{ "PlayerPush" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.Player), global::Net.ProtolJava.Player.Parser, new[]{ "Pid", "Move", "Shoot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.PVector3), global::Net.ProtolJava.PVector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.PlayerPush), global::Net.ProtolJava.PlayerPush.Parser, new[]{ "Player" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.GameReadyRequest), global::Net.ProtolJava.GameReadyRequest.Parser, new[]{ "RoomId", "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.GameReadyResponse), global::Net.ProtolJava.GameReadyResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.ProtolJava.GameReadyPush), global::Net.ProtolJava.GameReadyPush.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端向服务器同步玩家行为请求 
  /// </summary>
  public sealed partial class ActionRequest : pb::IMessage<ActionRequest> {
    private static readonly pb::MessageParser<ActionRequest> _parser = new pb::MessageParser<ActionRequest>(() => new ActionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionRequest(ActionRequest other) : this() {
      moveRequest_ = other.moveRequest_ != null ? other.moveRequest_.Clone() : null;
      shootRequest_ = other.shootRequest_ != null ? other.shootRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionRequest Clone() {
      return new ActionRequest(this);
    }

    /// <summary>Field number for the "moveRequest" field.</summary>
    public const int MoveRequestFieldNumber = 1;
    private global::Net.ProtolJava.MoveRequest moveRequest_;
    /// <summary>
    ///移动请求
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.MoveRequest MoveRequest {
      get { return moveRequest_; }
      set {
        moveRequest_ = value;
      }
    }

    /// <summary>Field number for the "shootRequest" field.</summary>
    public const int ShootRequestFieldNumber = 2;
    private global::Net.ProtolJava.ShootRequest shootRequest_;
    /// <summary>
    ///射击请求
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.ShootRequest ShootRequest {
      get { return shootRequest_; }
      set {
        shootRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MoveRequest, other.MoveRequest)) return false;
      if (!object.Equals(ShootRequest, other.ShootRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (moveRequest_ != null) hash ^= MoveRequest.GetHashCode();
      if (shootRequest_ != null) hash ^= ShootRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (moveRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MoveRequest);
      }
      if (shootRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ShootRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (moveRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveRequest);
      }
      if (shootRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShootRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionRequest other) {
      if (other == null) {
        return;
      }
      if (other.moveRequest_ != null) {
        if (moveRequest_ == null) {
          MoveRequest = new global::Net.ProtolJava.MoveRequest();
        }
        MoveRequest.MergeFrom(other.MoveRequest);
      }
      if (other.shootRequest_ != null) {
        if (shootRequest_ == null) {
          ShootRequest = new global::Net.ProtolJava.ShootRequest();
        }
        ShootRequest.MergeFrom(other.ShootRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (moveRequest_ == null) {
              MoveRequest = new global::Net.ProtolJava.MoveRequest();
            }
            input.ReadMessage(MoveRequest);
            break;
          }
          case 18: {
            if (shootRequest_ == null) {
              ShootRequest = new global::Net.ProtolJava.ShootRequest();
            }
            input.ReadMessage(ShootRequest);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 移动请求 
  /// </summary>
  public sealed partial class MoveRequest : pb::IMessage<MoveRequest> {
    private static readonly pb::MessageParser<MoveRequest> _parser = new pb::MessageParser<MoveRequest>(() => new MoveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRequest(MoveRequest other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      velocity_ = other.velocity_ != null ? other.velocity_.Clone() : null;
      hRotation_ = other.hRotation_;
      vRotation_ = other.vRotation_;
      hMove_ = other.hMove_;
      vMove_ = other.vMove_;
      hLookMove_ = other.hLookMove_;
      vLookMove_ = other.vLookMove_;
      jump_ = other.jump_;
      hasHit_ = other.hasHit_;
      aimDir_ = other.aimDir_ != null ? other.aimDir_.Clone() : null;
      hit_ = other.hit_ != null ? other.hit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRequest Clone() {
      return new MoveRequest(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Net.ProtolJava.PVector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.PVector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 2;
    private global::Net.ProtolJava.PVector3 velocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.PVector3 Velocity {
      get { return velocity_; }
      set {
        velocity_ = value;
      }
    }

    /// <summary>Field number for the "hRotation" field.</summary>
    public const int HRotationFieldNumber = 3;
    private float hRotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HRotation {
      get { return hRotation_; }
      set {
        hRotation_ = value;
      }
    }

    /// <summary>Field number for the "vRotation" field.</summary>
    public const int VRotationFieldNumber = 4;
    private float vRotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float VRotation {
      get { return vRotation_; }
      set {
        vRotation_ = value;
      }
    }

    /// <summary>Field number for the "hMove" field.</summary>
    public const int HMoveFieldNumber = 5;
    private float hMove_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HMove {
      get { return hMove_; }
      set {
        hMove_ = value;
      }
    }

    /// <summary>Field number for the "vMove" field.</summary>
    public const int VMoveFieldNumber = 6;
    private float vMove_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float VMove {
      get { return vMove_; }
      set {
        vMove_ = value;
      }
    }

    /// <summary>Field number for the "hLookMove" field.</summary>
    public const int HLookMoveFieldNumber = 7;
    private float hLookMove_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HLookMove {
      get { return hLookMove_; }
      set {
        hLookMove_ = value;
      }
    }

    /// <summary>Field number for the "vLookMove" field.</summary>
    public const int VLookMoveFieldNumber = 8;
    private float vLookMove_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float VLookMove {
      get { return vLookMove_; }
      set {
        vLookMove_ = value;
      }
    }

    /// <summary>Field number for the "jump" field.</summary>
    public const int JumpFieldNumber = 9;
    private bool jump_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Jump {
      get { return jump_; }
      set {
        jump_ = value;
      }
    }

    /// <summary>Field number for the "hasHit" field.</summary>
    public const int HasHitFieldNumber = 10;
    private bool hasHit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHit {
      get { return hasHit_; }
      set {
        hasHit_ = value;
      }
    }

    /// <summary>Field number for the "aimDir" field.</summary>
    public const int AimDirFieldNumber = 11;
    private global::Net.ProtolJava.PVector3 aimDir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.PVector3 AimDir {
      get { return aimDir_; }
      set {
        aimDir_ = value;
      }
    }

    /// <summary>Field number for the "hit" field.</summary>
    public const int HitFieldNumber = 12;
    private global::Net.ProtolJava.PVector3 hit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.PVector3 Hit {
      get { return hit_; }
      set {
        hit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Velocity, other.Velocity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HRotation, other.HRotation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VRotation, other.VRotation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HMove, other.HMove)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VMove, other.VMove)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HLookMove, other.HLookMove)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VLookMove, other.VLookMove)) return false;
      if (Jump != other.Jump) return false;
      if (HasHit != other.HasHit) return false;
      if (!object.Equals(AimDir, other.AimDir)) return false;
      if (!object.Equals(Hit, other.Hit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (velocity_ != null) hash ^= Velocity.GetHashCode();
      if (HRotation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HRotation);
      if (VRotation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VRotation);
      if (HMove != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HMove);
      if (VMove != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VMove);
      if (HLookMove != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HLookMove);
      if (VLookMove != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VLookMove);
      if (Jump != false) hash ^= Jump.GetHashCode();
      if (HasHit != false) hash ^= HasHit.GetHashCode();
      if (aimDir_ != null) hash ^= AimDir.GetHashCode();
      if (hit_ != null) hash ^= Hit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (velocity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Velocity);
      }
      if (HRotation != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(HRotation);
      }
      if (VRotation != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(VRotation);
      }
      if (HMove != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(HMove);
      }
      if (VMove != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(VMove);
      }
      if (HLookMove != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(HLookMove);
      }
      if (VLookMove != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(VLookMove);
      }
      if (Jump != false) {
        output.WriteRawTag(72);
        output.WriteBool(Jump);
      }
      if (HasHit != false) {
        output.WriteRawTag(80);
        output.WriteBool(HasHit);
      }
      if (aimDir_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(AimDir);
      }
      if (hit_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Hit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (velocity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
      }
      if (HRotation != 0F) {
        size += 1 + 4;
      }
      if (VRotation != 0F) {
        size += 1 + 4;
      }
      if (HMove != 0F) {
        size += 1 + 4;
      }
      if (VMove != 0F) {
        size += 1 + 4;
      }
      if (HLookMove != 0F) {
        size += 1 + 4;
      }
      if (VLookMove != 0F) {
        size += 1 + 4;
      }
      if (Jump != false) {
        size += 1 + 1;
      }
      if (HasHit != false) {
        size += 1 + 1;
      }
      if (aimDir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AimDir);
      }
      if (hit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveRequest other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Net.ProtolJava.PVector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.velocity_ != null) {
        if (velocity_ == null) {
          Velocity = new global::Net.ProtolJava.PVector3();
        }
        Velocity.MergeFrom(other.Velocity);
      }
      if (other.HRotation != 0F) {
        HRotation = other.HRotation;
      }
      if (other.VRotation != 0F) {
        VRotation = other.VRotation;
      }
      if (other.HMove != 0F) {
        HMove = other.HMove;
      }
      if (other.VMove != 0F) {
        VMove = other.VMove;
      }
      if (other.HLookMove != 0F) {
        HLookMove = other.HLookMove;
      }
      if (other.VLookMove != 0F) {
        VLookMove = other.VLookMove;
      }
      if (other.Jump != false) {
        Jump = other.Jump;
      }
      if (other.HasHit != false) {
        HasHit = other.HasHit;
      }
      if (other.aimDir_ != null) {
        if (aimDir_ == null) {
          AimDir = new global::Net.ProtolJava.PVector3();
        }
        AimDir.MergeFrom(other.AimDir);
      }
      if (other.hit_ != null) {
        if (hit_ == null) {
          Hit = new global::Net.ProtolJava.PVector3();
        }
        Hit.MergeFrom(other.Hit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Net.ProtolJava.PVector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (velocity_ == null) {
              Velocity = new global::Net.ProtolJava.PVector3();
            }
            input.ReadMessage(Velocity);
            break;
          }
          case 29: {
            HRotation = input.ReadFloat();
            break;
          }
          case 37: {
            VRotation = input.ReadFloat();
            break;
          }
          case 45: {
            HMove = input.ReadFloat();
            break;
          }
          case 53: {
            VMove = input.ReadFloat();
            break;
          }
          case 61: {
            HLookMove = input.ReadFloat();
            break;
          }
          case 69: {
            VLookMove = input.ReadFloat();
            break;
          }
          case 72: {
            Jump = input.ReadBool();
            break;
          }
          case 80: {
            HasHit = input.ReadBool();
            break;
          }
          case 90: {
            if (aimDir_ == null) {
              AimDir = new global::Net.ProtolJava.PVector3();
            }
            input.ReadMessage(AimDir);
            break;
          }
          case 98: {
            if (hit_ == null) {
              Hit = new global::Net.ProtolJava.PVector3();
            }
            input.ReadMessage(Hit);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 射击请求 
  /// </summary>
  public sealed partial class ShootRequest : pb::IMessage<ShootRequest> {
    private static readonly pb::MessageParser<ShootRequest> _parser = new pb::MessageParser<ShootRequest>(() => new ShootRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShootRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShootRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShootRequest(ShootRequest other) : this() {
      shootStart_ = other.shootStart_;
      shooting_ = other.shooting_;
      shootEnd_ = other.shootEnd_;
      bullets_ = other.bullets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShootRequest Clone() {
      return new ShootRequest(this);
    }

    /// <summary>Field number for the "shootStart" field.</summary>
    public const int ShootStartFieldNumber = 1;
    private bool shootStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShootStart {
      get { return shootStart_; }
      set {
        shootStart_ = value;
      }
    }

    /// <summary>Field number for the "shooting" field.</summary>
    public const int ShootingFieldNumber = 2;
    private bool shooting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Shooting {
      get { return shooting_; }
      set {
        shooting_ = value;
      }
    }

    /// <summary>Field number for the "shootEnd" field.</summary>
    public const int ShootEndFieldNumber = 3;
    private bool shootEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShootEnd {
      get { return shootEnd_; }
      set {
        shootEnd_ = value;
      }
    }

    /// <summary>Field number for the "bullets" field.</summary>
    public const int BulletsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Net.ProtolJava.BulletState> _repeated_bullets_codec
        = pb::FieldCodec.ForMessage(34, global::Net.ProtolJava.BulletState.Parser);
    private readonly pbc::RepeatedField<global::Net.ProtolJava.BulletState> bullets_ = new pbc::RepeatedField<global::Net.ProtolJava.BulletState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.ProtolJava.BulletState> Bullets {
      get { return bullets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShootRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShootRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShootStart != other.ShootStart) return false;
      if (Shooting != other.Shooting) return false;
      if (ShootEnd != other.ShootEnd) return false;
      if(!bullets_.Equals(other.bullets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShootStart != false) hash ^= ShootStart.GetHashCode();
      if (Shooting != false) hash ^= Shooting.GetHashCode();
      if (ShootEnd != false) hash ^= ShootEnd.GetHashCode();
      hash ^= bullets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShootStart != false) {
        output.WriteRawTag(8);
        output.WriteBool(ShootStart);
      }
      if (Shooting != false) {
        output.WriteRawTag(16);
        output.WriteBool(Shooting);
      }
      if (ShootEnd != false) {
        output.WriteRawTag(24);
        output.WriteBool(ShootEnd);
      }
      bullets_.WriteTo(output, _repeated_bullets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShootStart != false) {
        size += 1 + 1;
      }
      if (Shooting != false) {
        size += 1 + 1;
      }
      if (ShootEnd != false) {
        size += 1 + 1;
      }
      size += bullets_.CalculateSize(_repeated_bullets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShootRequest other) {
      if (other == null) {
        return;
      }
      if (other.ShootStart != false) {
        ShootStart = other.ShootStart;
      }
      if (other.Shooting != false) {
        Shooting = other.Shooting;
      }
      if (other.ShootEnd != false) {
        ShootEnd = other.ShootEnd;
      }
      bullets_.Add(other.bullets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShootStart = input.ReadBool();
            break;
          }
          case 16: {
            Shooting = input.ReadBool();
            break;
          }
          case 24: {
            ShootEnd = input.ReadBool();
            break;
          }
          case 34: {
            bullets_.AddEntriesFrom(input, _repeated_bullets_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 子弹状态 
  /// </summary>
  public sealed partial class BulletState : pb::IMessage<BulletState> {
    private static readonly pb::MessageParser<BulletState> _parser = new pb::MessageParser<BulletState>(() => new BulletState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulletState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletState(BulletState other) : this() {
      bulletUid_ = other.bulletUid_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      hitedPlayerId_ = other.hitedPlayerId_;
      isHeadShot_ = other.isHeadShot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletState Clone() {
      return new BulletState(this);
    }

    /// <summary>Field number for the "bulletUid" field.</summary>
    public const int BulletUidFieldNumber = 1;
    private int bulletUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletUid {
      get { return bulletUid_; }
      set {
        bulletUid_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::Net.ProtolJava.PVector3 pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.PVector3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 3;
    private global::Net.ProtolJava.PVector3 dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.PVector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "hitedPlayerId" field.</summary>
    public const int HitedPlayerIdFieldNumber = 4;
    private string hitedPlayerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HitedPlayerId {
      get { return hitedPlayerId_; }
      set {
        hitedPlayerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isHeadShot" field.</summary>
    public const int IsHeadShotFieldNumber = 5;
    private bool isHeadShot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsHeadShot {
      get { return isHeadShot_; }
      set {
        isHeadShot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulletState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulletState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BulletUid != other.BulletUid) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (HitedPlayerId != other.HitedPlayerId) return false;
      if (IsHeadShot != other.IsHeadShot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BulletUid != 0) hash ^= BulletUid.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (HitedPlayerId.Length != 0) hash ^= HitedPlayerId.GetHashCode();
      if (IsHeadShot != false) hash ^= IsHeadShot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BulletUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BulletUid);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (dir_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Dir);
      }
      if (HitedPlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HitedPlayerId);
      }
      if (IsHeadShot != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsHeadShot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BulletUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletUid);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (HitedPlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HitedPlayerId);
      }
      if (IsHeadShot != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulletState other) {
      if (other == null) {
        return;
      }
      if (other.BulletUid != 0) {
        BulletUid = other.BulletUid;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::Net.ProtolJava.PVector3();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::Net.ProtolJava.PVector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.HitedPlayerId.Length != 0) {
        HitedPlayerId = other.HitedPlayerId;
      }
      if (other.IsHeadShot != false) {
        IsHeadShot = other.IsHeadShot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BulletUid = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::Net.ProtolJava.PVector3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (dir_ == null) {
              Dir = new global::Net.ProtolJava.PVector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 34: {
            HitedPlayerId = input.ReadString();
            break;
          }
          case 40: {
            IsHeadShot = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器向客户端同步场景结果 
  /// </summary>
  public sealed partial class ResultPush : pb::IMessage<ResultPush> {
    private static readonly pb::MessageParser<ResultPush> _parser = new pb::MessageParser<ResultPush>(() => new ResultPush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultPush(ResultPush other) : this() {
      playerPush_ = other.playerPush_ != null ? other.playerPush_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultPush Clone() {
      return new ResultPush(this);
    }

    /// <summary>Field number for the "playerPush" field.</summary>
    public const int PlayerPushFieldNumber = 1;
    private global::Net.ProtolJava.PlayerPush playerPush_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.PlayerPush PlayerPush {
      get { return playerPush_; }
      set {
        playerPush_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerPush, other.PlayerPush)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerPush_ != null) hash ^= PlayerPush.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerPush_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerPush);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerPush_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPush);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultPush other) {
      if (other == null) {
        return;
      }
      if (other.playerPush_ != null) {
        if (playerPush_ == null) {
          PlayerPush = new global::Net.ProtolJava.PlayerPush();
        }
        PlayerPush.MergeFrom(other.PlayerPush);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerPush_ == null) {
              PlayerPush = new global::Net.ProtolJava.PlayerPush();
            }
            input.ReadMessage(PlayerPush);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 玩家信息 
  /// </summary>
  public sealed partial class Player : pb::IMessage<Player> {
    private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Player> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player(Player other) : this() {
      pid_ = other.pid_;
      move_ = other.move_ != null ? other.move_.Clone() : null;
      shoot_ = other.shoot_ != null ? other.shoot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player Clone() {
      return new Player(this);
    }

    /// <summary>Field number for the "pid" field.</summary>
    public const int PidFieldNumber = 1;
    private string pid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pid {
      get { return pid_; }
      set {
        pid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "move" field.</summary>
    public const int MoveFieldNumber = 2;
    private global::Net.ProtolJava.MoveRequest move_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.MoveRequest Move {
      get { return move_; }
      set {
        move_ = value;
      }
    }

    /// <summary>Field number for the "shoot" field.</summary>
    public const int ShootFieldNumber = 3;
    private global::Net.ProtolJava.ShootRequest shoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.ProtolJava.ShootRequest Shoot {
      get { return shoot_; }
      set {
        shoot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Player);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Player other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pid != other.Pid) return false;
      if (!object.Equals(Move, other.Move)) return false;
      if (!object.Equals(Shoot, other.Shoot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pid.Length != 0) hash ^= Pid.GetHashCode();
      if (move_ != null) hash ^= Move.GetHashCode();
      if (shoot_ != null) hash ^= Shoot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pid);
      }
      if (move_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Move);
      }
      if (shoot_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Shoot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pid);
      }
      if (move_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Move);
      }
      if (shoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shoot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Player other) {
      if (other == null) {
        return;
      }
      if (other.Pid.Length != 0) {
        Pid = other.Pid;
      }
      if (other.move_ != null) {
        if (move_ == null) {
          Move = new global::Net.ProtolJava.MoveRequest();
        }
        Move.MergeFrom(other.Move);
      }
      if (other.shoot_ != null) {
        if (shoot_ == null) {
          Shoot = new global::Net.ProtolJava.ShootRequest();
        }
        Shoot.MergeFrom(other.Shoot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pid = input.ReadString();
            break;
          }
          case 18: {
            if (move_ == null) {
              Move = new global::Net.ProtolJava.MoveRequest();
            }
            input.ReadMessage(Move);
            break;
          }
          case 26: {
            if (shoot_ == null) {
              Shoot = new global::Net.ProtolJava.ShootRequest();
            }
            input.ReadMessage(Shoot);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 玩家的Vector3 
  /// </summary>
  public sealed partial class PVector3 : pb::IMessage<PVector3> {
    private static readonly pb::MessageParser<PVector3> _parser = new pb::MessageParser<PVector3>(() => new PVector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PVector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVector3(PVector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVector3 Clone() {
      return new PVector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PVector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PVector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PVector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 玩家push 
  /// </summary>
  public sealed partial class PlayerPush : pb::IMessage<PlayerPush> {
    private static readonly pb::MessageParser<PlayerPush> _parser = new pb::MessageParser<PlayerPush>(() => new PlayerPush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPush(PlayerPush other) : this() {
      player_ = other.player_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPush Clone() {
      return new PlayerPush(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Net.ProtolJava.Player> _repeated_player_codec
        = pb::FieldCodec.ForMessage(10, global::Net.ProtolJava.Player.Parser);
    private readonly pbc::RepeatedField<global::Net.ProtolJava.Player> player_ = new pbc::RepeatedField<global::Net.ProtolJava.Player>();
    /// <summary>
    ///场景内所有玩家的信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.ProtolJava.Player> Player {
      get { return player_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!player_.Equals(other.player_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= player_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      player_.WriteTo(output, _repeated_player_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += player_.CalculateSize(_repeated_player_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerPush other) {
      if (other == null) {
        return;
      }
      player_.Add(other.player_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            player_.AddEntriesFrom(input, _repeated_player_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 游戏准备好的请求 
  /// </summary>
  public sealed partial class GameReadyRequest : pb::IMessage<GameReadyRequest> {
    private static readonly pb::MessageParser<GameReadyRequest> _parser = new pb::MessageParser<GameReadyRequest>(() => new GameReadyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameReadyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameReadyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameReadyRequest(GameReadyRequest other) : this() {
      roomId_ = other.roomId_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameReadyRequest Clone() {
      return new GameReadyRequest(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    /// <summary>
    ///房间Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private string playerId_ = "";
    /// <summary>
    ///玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameReadyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameReadyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameReadyRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameReadyResponse : pb::IMessage<GameReadyResponse> {
    private static readonly pb::MessageParser<GameReadyResponse> _parser = new pb::MessageParser<GameReadyResponse>(() => new GameReadyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameReadyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameReadyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameReadyResponse(GameReadyResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameReadyResponse Clone() {
      return new GameReadyResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameReadyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameReadyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameReadyResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 通知客户端可以开始游戏 
  /// </summary>
  public sealed partial class GameReadyPush : pb::IMessage<GameReadyPush> {
    private static readonly pb::MessageParser<GameReadyPush> _parser = new pb::MessageParser<GameReadyPush>(() => new GameReadyPush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameReadyPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.ProtolJava.InGameProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameReadyPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameReadyPush(GameReadyPush other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameReadyPush Clone() {
      return new GameReadyPush(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameReadyPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameReadyPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameReadyPush other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
